<?xml version="1.0" encoding="UTF-8"?>
<matrix-project>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
  <combinationFilter>(["Devel:Cloud:5", "Devel:Cloud:5/SLE_12", "Devel:Cloud:6", "Devel:Cloud:6/SLE_12_SP1", "Devel:Cloud:7/SLE_12_SP2" ].contains(project) || subproject == ":")</combinationFilter>
  <axes>
    <hudson.matrix.TextAxis>
      <name>project</name>
      <values>
        <string>Devel:Cloud:5</string>
        <string>Devel:Cloud:5/SLE_12</string>
        <string>Devel:Cloud:6/SLE_12_SP1</string>
        <string>Devel:Cloud:6:Appliances/SLE_12_SP1</string>
        <string>Devel:Cloud:7/SLE_12_SP2</string>
        <string>Devel:Cloud:7:Mitaka/SLE_12_SP2</string>
        <string>Devel:Cloud:Shared:11-SP3:Update</string>
        <string>SUSE:SLE-11-SP3:Update:Cloud5:Test</string>
        <string>SUSE:SLE-12-SP1:Update:Products:Cloud6/SLE_12_SP1</string>
        <string>SUSE:SLE-12-SP2:Update:Products:Cloud7/SLE_12_SP2</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>subproject</name>
      <values>
        <string>:</string>
        <string>:Staging</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>labels</name>
      <values>
        <string>cloud-mediacheck</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <canRoam>true</canRoam>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>24</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>@hourly</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>export automationrepo=~/github.com/SUSE-Cloud/automation
export jtsync=${automationrepo}/scripts/jtsync/jtsync.rb

# automation bootstrapping
if ! [ -e ${automationrepo}/scripts/jenkins/update_automation ] ; then
  rm -rf ${automationrepo}
  curl https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation | bash
fi
# fetch the latest automation updates
${automationrepo}/scripts/jenkins/update_automation

function jtsync_trap() {
  $jtsync --ci suse --matrix ${JOB_BASE_NAME},${project},${BUILD_NUMBER} 1 || :
}

# only enable jtsync when build is not manually triggered
if [[ "${ROOT_BUILD_CAUSE}" != "MANUALTRIGGER" ]]; then
  trap jtsync_trap EXIT ERR
fi
if [[ ! -d /mounts/dist ]] ; then
    zypper -n install git-core rsync make autofs nfs-client ypbind kernel-default -kernel-default-base curl wget libsolv-tools bsdtar
    echo -e 'ypserver 10.160.0.10\nypserver 10.160.0.1\nypserver 10.160.0.150' &gt; /etc/yp.conf
    echo suse.de &gt; /etc/defaultdomain
    for s in ypbind autofs ; do
        chkconfig $s on
        service $s restart
    done
fi
# temporary, similar to update_automation (not that advanced)
d=~/github.com/SUSE/cloud/
if [ ! -e  $d ] ; then
  mkdir -p ~/github.com/SUSE
  git clone git@github.com:SUSE/cloud.git $d
fi
pushd $d
git pull
popd
rm -rf cloud/
mkdir -p cloud
rsync -av $d/scripts ./cloud/

# Cleanup isos from old builds
rm -f scripts/release-mgmt/*Media1.iso

# options
export RPM_DEPCHECK=1
export SRCRPM_DEPCHECK=0

if [[ "$project" == "Devel:Cloud:Shared:11-SP3:Update" || "$project" =~ Devel:Cloud:.*:Appliances ]]; then
    export RPM_DEPCHECK_MEDIADEPS=" "
    export SRCRPM_DEPCHECK_MEDIADEPS=" "
    export INSTALLCHECK_EXTRA_OPTS="--exclude pattern:"
fi

OBS_PROJECT=$project
stage=$subproject
[[ $stage == ":" ]] &amp;&amp; stage=


if [ -n "$stage" ]; then
    if [ "${OBS_PROJECT##*\/}" != "${OBS_PROJECT}" ]; then
        OBS_PROJECT=${OBS_PROJECT%%\/*}$stage/${OBS_PROJECT##*\/}
    else
        OBS_PROJECT=${OBS_PROJECT%%\/*}$stage
    fi
fi

OBS_TYPE=IBS OBS_PROJECT=$OBS_PROJECT make -C cloud/scripts/release-mgmt/ mediacheck
RETVAL=$?

# Cleanup
rm -r cloud/scripts/release-mgmt/*.iso

# only enable jtsync when build is not manually triggered
if [[ "${ROOT_BUILD_CAUSE}" != "MANUALTRIGGER" ]]; then
  trap - EXIT ERR
  $jtsync --ci suse --matrix ${JOB_BASE_NAME},${project},${BUILD_NUMBER} $RETVAL || :
fi
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</matrix-project>
