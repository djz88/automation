<?xml version="1.0" encoding="UTF-8"?>
<project>
  <actions/>
  <description>Run pacemaker-cts testsuite.      
It's a useful only for cloud that was built by mkcloud 
and which has 3 nodes cluster (e.g. 1a, 1b, 2b, 6a)                      
Mandatory parameter: hw_number
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>15</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>hw_number</name>
          <description>Mandatory, number of the QA cloud server</description>
          <defaultValue>2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>scenario_name</name>
          <description>Optional; scenario name which typically is an integer with a single letter</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>scenario_job_name</name>
          <description>Optional; name of the scenario jenkins job that is used to trigger this job</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>scenario_build_number</name>
          <description>Optional; scenario build number that triggered this job</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>cloud-mkphyscloud-gate-qa</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
admin=crowbar$hw_number
cloud=qa$hw_number

# Create the artifacts directory
export artifacts_dir=$WORKSPACE/.artifacts
rm -rf $artifacts_dir
mkdir -p $artifacts_dir
touch $artifacts_dir/.ignore

ssh root@$admin "echo \"/usr/share/pacemaker/tests/cts/CTSlab.py \
                 --nodes 'node1 node2 node3' --at-boot 0 \
                 --benchmark --stonith-type ipmi --no-loop-tests \
                 --no-unsafe-tests --fencing openstack --once\" &gt; \
                 /tmp/pacemaker_cts_runner"

ssh -T root@$admin '
export node1=`ssh controller1 hostname`;
export node2=`ssh controller2 hostname`;
export node3=`ssh controller3 hostname`;

# pacemaker-cts preparation script
cat &gt; /tmp/pacemaker_cts_prepare &lt;&lt;EOSCRIPT
  zypper ar dir:///srv/tftpboot/suse-12.2/x86_64/repos/SLE12-SP2-HA-Updates SLES12-SP2-HA-Updates 
  zypper ar dir:///srv/tftpboot/suse-12.2/x86_64/repos/SLE12-SP2-HA-Pool SLE12-SP2-HA-Pool  
  zypper ref
  zypper -n in pacemaker-cts
EOSCRIPT

# install pacemaker-cts utility on the crowbar node
bash /tmp/pacemaker_cts_prepare 

# copy pacemaker-cts preparation script to every node in the cluster
for i in controller{1..3}; do scp /tmp/pacemaker_cts_prepare $i:/tmp \
; done 

# install pacemaker-cts on each controller node in the cluster
for i in controller{1..3}; do ssh $i bash /tmp/pacemaker_cts_prepare \
; done 

# obtaining credentials
source .openrc 

sed -i -e "s,node1,$node1," /tmp/pacemaker_cts_runner
sed -i -e "s,node2,$node2," /tmp/pacemaker_cts_runner
sed -i -e "s,node3,$node3," /tmp/pacemaker_cts_runner

# run pacemaker-cts on the crowbar node
bash /tmp/pacemaker_cts_runner
' 

result=$?
if [[ $result -gt 0 ]]; then
  exit $result
fi
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>.artifacts/**</artifacts>
      <allowEmptyArchive>true</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@">
      <template>#${BUILD_NUMBER} - ${scenario_name} - qa$hw_number - pacemaker-cts</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@"/>
  </buildWrappers>
</project>
