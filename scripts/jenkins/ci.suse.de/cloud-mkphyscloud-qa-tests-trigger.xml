<?xml version="1.0" encoding="UTF-8"?>
<project>
  <actions/>
  <description>Running this job makes sense only if you have installed your cloud with mkcloud, otherwise it will be failing as it depends on files that are created by qa_crowbarsetup.sh .
Its goal is triggering tests.

Has 1 mandatory attribute:
* hw_number -&gt; number of the QA hardware

Has multiple optional attributes:
* tempest -&gt; tempest test type(s);combinations of smoke, full and defcore, e.g. smoke|full; smoke is run always as first, then defcore and eventually full testsuite
* cct -&gt; test name, e.g. features:base
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>7</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>hw_number</name>
          <description>Mandatory, name of the QA cloud server as integer</description>
          <defaultValue>2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>tempest</name>
          <description>Optional, specify what tempest test(s) to run, e.g. smoke, smoke|full or smoke|defcore|full</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>cct_tests</name>
          <description>Optional; triggers cct tests. If the value is left empty, no cct tests will be run. The tests must be separated by + sign, e.g. feature:admin+feature:controller</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>trigger_upgrade</name>
          <description>Trigger the upgrade process for this cloud in a separate job</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>horizon-tests</name>
          <description>Optional, Run horizon integration test.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>scenario_name</name>
          <description>Optional; scenario name which typically is an integer with a single letter</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>scenario_job_name</name>
          <description>Optional; name of the scenario jenkins job that is used to trigger this job</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>scenario_build_number</name>
          <description>Optional; scenario build number that triggered this job</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTHEAD</name>
          <description>if non-empty, test latest version from Devel:Cloud Staging</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>testsetup</name>
          <description>Run tempest with testsetup() in qa_crowbarsetup.sh script</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>cloud-mkphyscloud-gate-qa</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@">
      <condition class="org.jenkins_ci.plugins.run_condition.core.ExpressionCondition" plugin="run-condition@1.0">
        <expression>${ENV,var="tempest"}</expression>
        <label>smoke</label>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>hw_number=$hw_number
testsetup=$testsetup
scenario_name=$scenario_name
scenario_job_name=$scenario_job_name
scenario_build_number=$scenario_build_number
TESTHEAD=$TESTHEAD
</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>cloud-mkphyscloud-qa-test-tempest-smoke</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@">
      <condition class="org.jenkins_ci.plugins.run_condition.core.ExpressionCondition" plugin="run-condition@1.0">
        <expression>${ENV,var="tempest"}</expression>
        <label>defcore</label>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>hw_number=$hw_number
scenario_name=$scenario_name
scenario_job_name=$scenario_job_name
scenario_build_number=$scenario_build_number
testsetup=$testsetup
TESTHEAD=$TESTHEAD
</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>cloud-mkphyscloud-qa-test-tempest-defcore</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@">
      <condition class="org.jenkins_ci.plugins.run_condition.core.ExpressionCondition" plugin="run-condition@1.0">
        <expression>${ENV,var="tempest"}</expression>
        <label>full</label>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>hw_number=$hw_number
scenario_name=$scenario_name
scenario_job_name=$scenario_job_name
scenario_build_number=$scenario_build_number
TESTHEAD=$TESTHEAD
</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>cloud-mkphyscloud-qa-test-tempest-full</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block/>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@">
      <condition class="org.jenkins_ci.plugins.run_condition.core.ExpressionCondition" plugin="run-condition@1.0">
        <expression>(feature|test).*</expression>
        <label>${ENV,var="cct_tests"}</label>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>hw_number=$hw_number
scenario_name=$scenario_name
scenario_job_name=$scenario_job_name
scenario_build_number=$scenario_build_number
cct_tests=$cct_tests
</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>cloud-mkphyscloud-qa-test-cct</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@">
      <condition class="org.jenkins_ci.plugins.run_condition.core.BooleanCondition" plugin="run-condition@1.0">
        <token>${ENV,var="horizon-tests"}</token>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>hw_number=$hw_number
scenario_name=$scenario_name
scenario_job_name=$scenario_job_name
scenario_build_number=$scenario_build_number
TESTHEAD=$TESTHEAD
</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>cloud-mkphyscloud-qa-test-horizon-tests</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@">
      <condition class="org.jenkins_ci.plugins.run_condition.core.BooleanCondition" plugin="run-condition@1.0">
        <token>${ENV,var="trigger_upgrade"}</token>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>hw_number=$hw_number
scenario_name=$scenario_name
scenario_job_name=$scenario_job_name
scenario_build_number=$scenario_build_number
</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>cloud-mkphyscloud-qa-test-upgrade-ui</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@">
      <template>#${BUILD_NUMBER}: ${ENV,var="scenario_name"} - ${ENV,var="hw_number"}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@"/>
  </buildWrappers>
</project>
