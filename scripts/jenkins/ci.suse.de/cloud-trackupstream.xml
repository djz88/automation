<?xml version="1.0" encoding="UTF-8"?>
<matrix-project>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>true</runSequentially>
  </executionStrategy>
  <combinationFilter>!(
  (
    [
      "Devel:Cloud:5:Staging"
    ].contains(project) &amp;&amp;
    [
      "openstack-dashboard-theme-SUSE",
      "crowbar-core",
      "crowbar-openstack",
      "crowbar-ha",
      "crowbar-hyperv",
      "crowbar-ceph",
      "release-notes-suse-openstack-cloud",
      "crowbar-ui"
    ].contains(component)
  )
  ||
  (
    (
      ! [
        "Devel:Cloud:5:Staging"
      ].contains(project) ) &amp;&amp;
     component.startsWith('crowbar-barclamp-') ||
     [
       "suse-cloud-upgrade"
     ].contains(component)
  )
  ||
  (
    [
      "Devel:Cloud:5:Staging",
      "Devel:Cloud:6:Staging"
    ].contains(project) &amp;&amp;
    [
      "crowbar-init"
    ].contains(component)
  )
  ||
  (
    [
      "Devel:Cloud:6:SAP:Staging"
    ].contains(project) &amp;&amp;
    [
      "crowbar-ui",
      "crowbar-hyperv",
      "crowbar-init",
      "openstack-dashboard-theme-SUSE",
      "release-notes-suse-openstack-cloud"
    ].contains(component)
  )
)</combinationFilter>
  <axes>
    <hudson.matrix.TextAxis>
      <name>component</name>
      <values>
        <string>crowbar</string>
        <string>crowbar-ui</string>
        <string>crowbar-core</string>
        <string>crowbar-openstack</string>
        <string>crowbar-ceph</string>
        <string>crowbar-ha</string>
        <string>crowbar-hyperv</string>
        <string>crowbar-init</string>
        <string>openstack-dashboard-theme-SUSE</string>
        <string>release-notes-suse-openstack-cloud</string>
        <string>crowbar-barclamp-bios</string>
        <string>crowbar-barclamp-ceilometer</string>
        <string>crowbar-barclamp-ceph</string>
        <string>crowbar-barclamp-cinder</string>
        <string>crowbar-barclamp-cisco-ucs</string>
        <string>crowbar-barclamp-crowbar</string>
        <string>crowbar-barclamp-database</string>
        <string>crowbar-barclamp-deployer</string>
        <string>crowbar-barclamp-dns</string>
        <string>crowbar-barclamp-ganglia</string>
        <string>crowbar-barclamp-glance</string>
        <string>crowbar-barclamp-heat</string>
        <string>crowbar-barclamp-hyperv</string>
        <string>crowbar-barclamp-ipmi</string>
        <string>crowbar-barclamp-keystone</string>
        <string>crowbar-barclamp-logging</string>
        <string>crowbar-barclamp-manila</string>
        <string>crowbar-barclamp-nagios</string>
        <string>crowbar-barclamp-network</string>
        <string>crowbar-barclamp-nfs_client</string>
        <string>crowbar-barclamp-nova</string>
        <string>crowbar-barclamp-nova_dashboard</string>
        <string>crowbar-barclamp-ntp</string>
        <string>crowbar-barclamp-openstack</string>
        <string>crowbar-barclamp-pacemaker</string>
        <string>crowbar-barclamp-provisioner</string>
        <string>crowbar-barclamp-neutron</string>
        <string>crowbar-barclamp-rabbitmq</string>
        <string>crowbar-barclamp-raid</string>
        <string>crowbar-barclamp-suse-manager-client</string>
        <string>crowbar-barclamp-swift</string>
        <string>crowbar-barclamp-tempest</string>
        <string>crowbar-barclamp-trove</string>
        <string>crowbar-barclamp-updater</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>project</name>
      <values>
        <string>Devel:Cloud:5:Staging</string>
        <string>Devel:Cloud:6:Staging</string>
        <string>Devel:Cloud:6:SAP:Staging</string>
        <string>Devel:Cloud:7:Staging</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>openstack-trackupstream</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <canRoam>true</canRoam>
  <logRotator>
    <daysToKeep>30</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>H 5,19 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>PROJECTSOURCE=IBS/${project}
COMPONENT=$component

# needs .oscrc with user,pass,trusted_prj
# zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools/SLE_11_SP2/openSUSE:Tools.repo
# zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools:/Unstable/SLE_11_SP2/openSUSE:Tools:Unstable.repo
# zypper in osc obs-service-tar_scm obs-service-github_tarballs obs-service-recompress obs-service-git_tarballs obs-service-set_version obs-service-refresh_patches
[ -z "$PROJECTSOURCE" ] &amp;&amp; ( echo "Error: no PROJECTSOURCE defined." ; exit 1 )

export automationrepo=~/github.com/SUSE-Cloud/automation
export jtsync=${automationrepo}/scripts/jtsync/jtsync.rb

function jtsync_trap() {
  $jtsync --ci suse --matrix ${JOB_BASE_NAME},${project},${BUILD_NUMBER} 1
}

# only enable jtsync when build is not manually triggered
if [[ "${ROOT_BUILD_CAUSE}" != "MANUALTRIGGER" ]]; then
  trap jtsync_trap EXIT ERR
fi

# automation bootstrapping
if ! [ -e ${automationrepo}/scripts/jenkins/update_automation ] ; then
    rm -rf ${automationrepo}
    curl https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation | bash
fi
${automationrepo}/scripts/jenkins/update_automation

OBS_TYPE=${PROJECTSOURCE%%/*}
OBS_PROJECT=${PROJECTSOURCE##*/}

BUILD_DIST=SLE_12_SP2
OSC_BUILD_ARCH=x86_64

case $project in
    Devel:Cloud:[45]*)
        BUILD_DIST=SLE_11_SP3
        ;;
    Devel:Cloud:6*)
        BUILD_DIST=SLE_12_SP1
        ;;
esac


case $OBS_TYPE in
  OBS) OSCAPI="https://api.opensuse.org"
      OSC_BUILD_DIST=$BUILD_DIST
      ;;
  IBS) OSCAPI="https://api.suse.de"
      OSC_BUILD_DIST=$BUILD_DIST
      ;;
  *)   echo "This jenkins instance only interacts with OBS or IBS."
      exit 1
      ;;
esac

# remove accidentally added spaces
COMPONENT=${COMPONENT// /}
OBS_PROJECT=${OBS_PROJECT// /}

if [ -z "$COMPONENT" ] ; then
    echo "Error: Variable COMPONENT is unset."
    exit 1
fi

export OSCAPI
export OSC_BUILD_DIST
export OSC_BUILD_ARCH

export JHOME=/home/jenkins
export BS_CHECKOUT=$JHOME/${OBS_TYPE}_CHECKOUT/$OBS_PROJECT
export OSC_BUILD_ROOT=$JHOME/buildroot

mkdir -p ~/.obs
for i in incoming repo repourl
do
    mkdir -p $JHOME/obscache/tar_scm/$i
done
echo "CACHEDIRECTORY=\"$JHOME/obscache/tar_scm\"" &gt; ~/.obs/tar_scm

mkdir -p "$BS_CHECKOUT"
cd "$BS_CHECKOUT"

rm -rf "$COMPONENT"
osc -A $OSCAPI co -c "$OBS_PROJECT" "$COMPONENT"

[ -d "$COMPONENT" ] || ( echo "Error: Component $COMPONENT does not exist (yet) or has been removed."  ; exit 1 )
cd "$COMPONENT"

grep -q "&lt;linkinfo" .osc/_files || exit 2

/root/github.com/SUSE-Cloud/automation/scripts/jenkins/track-upstream-and-package.pl
ret=$?

# only enable jtsync when build is not manually triggered
if [[ "${ROOT_BUILD_CAUSE}" != "MANUALTRIGGER" ]]; then
  trap - EXIT ERR
  $jtsync --ci suse --matrix ${JOB_BASE_NAME},${project},${BUILD_NUMBER} $ret
fi
exit $ret
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</matrix-project>
